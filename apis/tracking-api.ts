/* tslint:disable */
/* eslint-disable */
/**
 * DHL Express APIs (MyDHL API)
 * Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 
 *
 * OpenAPI spec version: 2.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import globalAxios, { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
import { SupermodelIoLogisticsExpressErrorResponse } from '../models';
import { SupermodelIoLogisticsExpressTrackingResponse } from '../models';
/**
 * TrackingApi - axios parameter creator
 * @export
 */
export const TrackingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * The Tracking service retrieves tracking statuses for a single DHL Express Shipment 
         * @summary Track a single DHL Express Shipment
         * @param {string} shipmentTrackingNumber DHL Express shipment identification number
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        expApiShipmentsTracking: async (shipmentTrackingNumber: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentTrackingNumber' is not null or undefined
            if (shipmentTrackingNumber === null || shipmentTrackingNumber === undefined) {
                throw new RequiredError('shipmentTrackingNumber','Required parameter shipmentTrackingNumber was null or undefined when calling expApiShipmentsTracking.');
            }
            const localVarPath = `/shipments/{shipmentTrackingNumber}/tracking`
                .replace(`{${"shipmentTrackingNumber"}}`, encodeURIComponent(String(shipmentTrackingNumber)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication basicAuth required

            if (trackingView !== undefined) {
                localVarQueryParameter['trackingView'] = trackingView;
            }

            if (levelOfDetail !== undefined) {
                localVarQueryParameter['levelOfDetail'] = levelOfDetail;
            }

            if (messageReference !== undefined && messageReference !== null) {
                localVarHeaderParameter['Message-Reference'] = String(messageReference);
            }

            if (messageReferenceDate !== undefined && messageReferenceDate !== null) {
                localVarHeaderParameter['Message-Reference-Date'] = String(messageReferenceDate);
            }

            if (acceptLanguage !== undefined && acceptLanguage !== null) {
                localVarHeaderParameter['Accept-Language'] = String(acceptLanguage);
            }

            if (pluginName !== undefined && pluginName !== null) {
                localVarHeaderParameter['Plugin-Name'] = String(pluginName);
            }

            if (pluginVersion !== undefined && pluginVersion !== null) {
                localVarHeaderParameter['Plugin-Version'] = String(pluginVersion);
            }

            if (shippingSystemPlatformName !== undefined && shippingSystemPlatformName !== null) {
                localVarHeaderParameter['Shipping-System-Platform-Name'] = String(shippingSystemPlatformName);
            }

            if (shippingSystemPlatformVersion !== undefined && shippingSystemPlatformVersion !== null) {
                localVarHeaderParameter['Shipping-System-Platform-Version'] = String(shippingSystemPlatformVersion);
            }

            if (webstorePlatformName !== undefined && webstorePlatformName !== null) {
                localVarHeaderParameter['Webstore-Platform-Name'] = String(webstorePlatformName);
            }

            if (webstorePlatformVersion !== undefined && webstorePlatformVersion !== null) {
                localVarHeaderParameter['Webstore-Platform-Version'] = String(webstorePlatformVersion);
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments 
         * @summary Track a single or multiple DHL Express Shipments
         * @param {Array<string>} [shipmentTrackingNumber] DHL Express shipment identification number
         * @param {Array<string>} [pieceTrackingNumber] DHL Express shipment piece tracking number
         * @param {string} [shipmentReference] Shipment reference which was provided during the shipment label creation 
         * @param {string} [shipmentReferenceType] Shipment reference type which was provided during the shipment label creation 
         * @param {string} [shipperAccountNumber] Shipper DHL Express Account number under which the shipment label was created 
         * @param {string} [dateRangeFrom] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
         * @param {string} [dateRangeTo] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        expApiShipmentsTrackingMulti: async (shipmentTrackingNumber?: Array<string>, pieceTrackingNumber?: Array<string>, shipmentReference?: string, shipmentReferenceType?: string, shipperAccountNumber?: string, dateRangeFrom?: string, dateRangeTo?: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/tracking`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions :AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication basicAuth required

            if (shipmentTrackingNumber) {
                localVarQueryParameter['shipmentTrackingNumber'] = shipmentTrackingNumber;
            }

            if (pieceTrackingNumber) {
                localVarQueryParameter['pieceTrackingNumber'] = pieceTrackingNumber;
            }

            if (shipmentReference !== undefined) {
                localVarQueryParameter['shipmentReference'] = shipmentReference;
            }

            if (shipmentReferenceType !== undefined) {
                localVarQueryParameter['shipmentReferenceType'] = shipmentReferenceType;
            }

            if (shipperAccountNumber !== undefined) {
                localVarQueryParameter['shipperAccountNumber'] = shipperAccountNumber;
            }

            if (dateRangeFrom !== undefined) {
                localVarQueryParameter['dateRangeFrom'] = dateRangeFrom;
            }

            if (dateRangeTo !== undefined) {
                localVarQueryParameter['dateRangeTo'] = dateRangeTo;
            }

            if (trackingView !== undefined) {
                localVarQueryParameter['trackingView'] = trackingView;
            }

            if (levelOfDetail !== undefined) {
                localVarQueryParameter['levelOfDetail'] = levelOfDetail;
            }

            if (messageReference !== undefined && messageReference !== null) {
                localVarHeaderParameter['Message-Reference'] = String(messageReference);
            }

            if (messageReferenceDate !== undefined && messageReferenceDate !== null) {
                localVarHeaderParameter['Message-Reference-Date'] = String(messageReferenceDate);
            }

            if (acceptLanguage !== undefined && acceptLanguage !== null) {
                localVarHeaderParameter['Accept-Language'] = String(acceptLanguage);
            }

            if (pluginName !== undefined && pluginName !== null) {
                localVarHeaderParameter['Plugin-Name'] = String(pluginName);
            }

            if (pluginVersion !== undefined && pluginVersion !== null) {
                localVarHeaderParameter['Plugin-Version'] = String(pluginVersion);
            }

            if (shippingSystemPlatformName !== undefined && shippingSystemPlatformName !== null) {
                localVarHeaderParameter['Shipping-System-Platform-Name'] = String(shippingSystemPlatformName);
            }

            if (shippingSystemPlatformVersion !== undefined && shippingSystemPlatformVersion !== null) {
                localVarHeaderParameter['Shipping-System-Platform-Version'] = String(shippingSystemPlatformVersion);
            }

            if (webstorePlatformName !== undefined && webstorePlatformName !== null) {
                localVarHeaderParameter['Webstore-Platform-Name'] = String(webstorePlatformName);
            }

            if (webstorePlatformVersion !== undefined && webstorePlatformVersion !== null) {
                localVarHeaderParameter['Webstore-Platform-Version'] = String(webstorePlatformVersion);
            }

            const query = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                query.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.params) {
                query.set(key, options.params[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(query)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * TrackingApi - functional programming interface
 * @export
 */
export const TrackingApiFp = function(configuration?: Configuration) {
    return {
        /**
         * The Tracking service retrieves tracking statuses for a single DHL Express Shipment 
         * @summary Track a single DHL Express Shipment
         * @param {string} shipmentTrackingNumber DHL Express shipment identification number
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async expApiShipmentsTracking(shipmentTrackingNumber: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>>> {
            const localVarAxiosArgs = await TrackingApiAxiosParamCreator(configuration).expApiShipmentsTracking(shipmentTrackingNumber, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments 
         * @summary Track a single or multiple DHL Express Shipments
         * @param {Array<string>} [shipmentTrackingNumber] DHL Express shipment identification number
         * @param {Array<string>} [pieceTrackingNumber] DHL Express shipment piece tracking number
         * @param {string} [shipmentReference] Shipment reference which was provided during the shipment label creation 
         * @param {string} [shipmentReferenceType] Shipment reference type which was provided during the shipment label creation 
         * @param {string} [shipperAccountNumber] Shipper DHL Express Account number under which the shipment label was created 
         * @param {string} [dateRangeFrom] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
         * @param {string} [dateRangeTo] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async expApiShipmentsTrackingMulti(shipmentTrackingNumber?: Array<string>, pieceTrackingNumber?: Array<string>, shipmentReference?: string, shipmentReferenceType?: string, shipperAccountNumber?: string, dateRangeFrom?: string, dateRangeTo?: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>>> {
            const localVarAxiosArgs = await TrackingApiAxiosParamCreator(configuration).expApiShipmentsTrackingMulti(shipmentTrackingNumber, pieceTrackingNumber, shipmentReference, shipmentReferenceType, shipperAccountNumber, dateRangeFrom, dateRangeTo, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs :AxiosRequestConfig = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * TrackingApi - factory interface
 * @export
 */
export const TrackingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * The Tracking service retrieves tracking statuses for a single DHL Express Shipment 
         * @summary Track a single DHL Express Shipment
         * @param {string} shipmentTrackingNumber DHL Express shipment identification number
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async expApiShipmentsTracking(shipmentTrackingNumber: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>> {
            return TrackingApiFp(configuration).expApiShipmentsTracking(shipmentTrackingNumber, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options).then((request) => request(axios, basePath));
        },
        /**
         * The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments 
         * @summary Track a single or multiple DHL Express Shipments
         * @param {Array<string>} [shipmentTrackingNumber] DHL Express shipment identification number
         * @param {Array<string>} [pieceTrackingNumber] DHL Express shipment piece tracking number
         * @param {string} [shipmentReference] Shipment reference which was provided during the shipment label creation 
         * @param {string} [shipmentReferenceType] Shipment reference type which was provided during the shipment label creation 
         * @param {string} [shipperAccountNumber] Shipper DHL Express Account number under which the shipment label was created 
         * @param {string} [dateRangeFrom] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
         * @param {string} [dateRangeTo] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
         * @param {string} [trackingView] 
         * @param {string} [levelOfDetail] 
         * @param {string} [messageReference] Please provide message reference 
         * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
         * @param {string} [acceptLanguage] 
         * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
         * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
         * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
         * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async expApiShipmentsTrackingMulti(shipmentTrackingNumber?: Array<string>, pieceTrackingNumber?: Array<string>, shipmentReference?: string, shipmentReferenceType?: string, shipperAccountNumber?: string, dateRangeFrom?: string, dateRangeTo?: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig): Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>> {
            return TrackingApiFp(configuration).expApiShipmentsTrackingMulti(shipmentTrackingNumber, pieceTrackingNumber, shipmentReference, shipmentReferenceType, shipperAccountNumber, dateRangeFrom, dateRangeTo, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * TrackingApi - object-oriented interface
 * @export
 * @class TrackingApi
 * @extends {BaseAPI}
 */
export class TrackingApi extends BaseAPI {
    /**
     * The Tracking service retrieves tracking statuses for a single DHL Express Shipment 
     * @summary Track a single DHL Express Shipment
     * @param {string} shipmentTrackingNumber DHL Express shipment identification number
     * @param {string} [trackingView] 
     * @param {string} [levelOfDetail] 
     * @param {string} [messageReference] Please provide message reference 
     * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
     * @param {string} [acceptLanguage] 
     * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
     * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
     * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
     * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
     * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
     * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackingApi
     */
    public async expApiShipmentsTracking(shipmentTrackingNumber: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>> {
        return TrackingApiFp(this.configuration).expApiShipmentsTracking(shipmentTrackingNumber, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options).then((request) => request(this.axios, this.basePath));
    }
    /**
     * The Tracking service retrieves tracking statuses for a single or multiple DHL Express Shipments 
     * @summary Track a single or multiple DHL Express Shipments
     * @param {Array<string>} [shipmentTrackingNumber] DHL Express shipment identification number
     * @param {Array<string>} [pieceTrackingNumber] DHL Express shipment piece tracking number
     * @param {string} [shipmentReference] Shipment reference which was provided during the shipment label creation 
     * @param {string} [shipmentReferenceType] Shipment reference type which was provided during the shipment label creation 
     * @param {string} [shipperAccountNumber] Shipper DHL Express Account number under which the shipment label was created 
     * @param {string} [dateRangeFrom] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the start of the period. 
     * @param {string} [dateRangeTo] When tracking by Shipment reference you need to restrict the search by timeframe. Please provide the end of the period. 
     * @param {string} [trackingView] 
     * @param {string} [levelOfDetail] 
     * @param {string} [messageReference] Please provide message reference 
     * @param {string} [messageReferenceDate] Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
     * @param {string} [acceptLanguage] 
     * @param {string} [pluginName] Please provide name of the plugin (applicable to 3PV only) 
     * @param {string} [pluginVersion] Please provide version of the plugin (applicable to 3PV only) 
     * @param {string} [shippingSystemPlatformName] Please provide name of the shipping platform(applicable to 3PV only) 
     * @param {string} [shippingSystemPlatformVersion] Please provide version of the shipping platform (applicable to 3PV only) 
     * @param {string} [webstorePlatformName] Please provide name of the webstore platform (applicable to 3PV only) 
     * @param {string} [webstorePlatformVersion] Please provide version of the webstore platform (applicable to 3PV only) 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TrackingApi
     */
    public async expApiShipmentsTrackingMulti(shipmentTrackingNumber?: Array<string>, pieceTrackingNumber?: Array<string>, shipmentReference?: string, shipmentReferenceType?: string, shipperAccountNumber?: string, dateRangeFrom?: string, dateRangeTo?: string, trackingView?: string, levelOfDetail?: string, messageReference?: string, messageReferenceDate?: string, acceptLanguage?: string, pluginName?: string, pluginVersion?: string, shippingSystemPlatformName?: string, shippingSystemPlatformVersion?: string, webstorePlatformName?: string, webstorePlatformVersion?: string, options?: AxiosRequestConfig) : Promise<AxiosResponse<SupermodelIoLogisticsExpressTrackingResponse>> {
        return TrackingApiFp(this.configuration).expApiShipmentsTrackingMulti(shipmentTrackingNumber, pieceTrackingNumber, shipmentReference, shipmentReferenceType, shipperAccountNumber, dateRangeFrom, dateRangeTo, trackingView, levelOfDetail, messageReference, messageReferenceDate, acceptLanguage, pluginName, pluginVersion, shippingSystemPlatformName, shippingSystemPlatformVersion, webstorePlatformName, webstorePlatformVersion, options).then((request) => request(this.axios, this.basePath));
    }
}
